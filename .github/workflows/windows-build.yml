name: Build Windows EXE

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  workflow_dispatch:

permissions:
  contents: write

env:
  PYTHON_VERSION: "3.11"
  APP_NAME: "DawsonDIY-Stock"
  MAIN_SCRIPT: "stock_cost_scanner.py"   # ถ้าคุณใช้ชื่ออื่น ให้แก้ให้ตรง

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~\AppData\Local\pip\Cache
          key: pip-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-${{ env.PYTHON_VERSION }}-

      - name: Install dependencies
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          if (Test-Path "requirements.txt") { pip install -r requirements.txt }
          pip install pyinstaller

      # ถ้ามี assets/app.ico จะใส่ไอคอนให้อัตโนมัติ
      - name: Detect optional icon
        shell: pwsh
        run: |
          $IconArg = ""
          if (Test-Path "assets/app.ico") { $IconArg = "--icon assets/app.ico" }
          "ICON_ARG=$IconArg" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Show versions & files (debug)
        shell: pwsh
        run: |
          python -V
          pyinstaller --version
          Write-Host "ICON_ARG: $env:ICON_ARG"
          Get-ChildItem -Recurse | Select-Object -First 50 | Format-Table -AutoSize

      # ใช้ python -m PyInstaller + คำสั่งบรรทัดเดียวจริง ๆ
      - name: Build EXE (onefile, no console)
        shell: pwsh
        run: |
          $script = Resolve-Path ".\${{ env.MAIN_SCRIPT }}"
          python -m PyInstaller -F -w --clean -y -n "${{ env.APP_NAME }}" $env:ICON_ARG --hidden-import=barcode --hidden-import=barcode.code128 --collect-all barcode --collect-all PIL "$script"

      - name: Verify build outputs
        shell: pwsh
        run: |
          Get-ChildItem -Recurse dist
          if (!(Test-Path "dist/${{ env.APP_NAME }}.exe")) {
            Write-Error "EXE not found. Check PyInstaller logs above."
          }

      - name: Upload artifact (.exe)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-win
          path: dist/*

      # แนบ .exe เข้า Release อัตโนมัติเมื่อพุช tag v*
      - name: Create GitHub Release (on tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
