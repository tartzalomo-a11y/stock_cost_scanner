name: Build Windows EXE

on:
  push:
    branches: [ "main" ]          # รันอัตโนมัติเมื่อมี commit เข้าสาขา main
    tags: [ "v*" ]                # ถ้าพุช tag ขึ้นต้นด้วย v (เช่น v1.0.0) จะปล่อย Release ให้ด้วย
  workflow_dispatch:              # รันด้วยมือได้จากแท็บ Actions

permissions:
  contents: write                 # ให้สิทธิ์สร้าง Release ตอนติดแท็ก

env:
  PYTHON_VERSION: "3.11"
  APP_NAME: "DawsonDIY-Stock"     # ชื่อไฟล์ .exe ที่จะได้
  MAIN_SCRIPT: "stock_cost_scanner.py"  # ชื่อไฟล์สคริปต์หลักของคุณ

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~\AppData\Local\pip\Cache
          key: pip-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-${{ env.PYTHON_VERSION }}-

      - name: Install dependencies
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          if (Test-Path "requirements.txt") {
            pip install -r requirements.txt
          }
          pip install pyinstaller

      # ทำ argument ไอคอนอัตโนมัติ ถ้ามี assets/app.ico
      - name: Detect optional icon
        shell: pwsh
        run: |
          $IconArg = ""
          if (Test-Path "assets/app.ico") { $IconArg = "--icon assets/app.ico" }
          "ICON_ARG=$IconArg" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Build EXE (onefile, no console)
        shell: pwsh
        run: |
          pyinstaller --noconsole --onefile `
            --name "${{ env.APP_NAME }}" `
            $env:ICON_ARG `
            --hidden-import=barcode `
            --hidden-import=barcode.code128 `
            "${{ env.MAIN_SCRIPT }}"

      - name: Verify build outputs
        shell: pwsh
        run: |
          Get-ChildItem -Recurse dist
          if (!(Test-Path "dist/${{ env.APP_NAME }}.exe")) {
            Write-Error "EXE not found. Check PyInstaller logs above."
          }

      - name: Upload artifact (.exe)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-win
          path: dist/*

      # สร้าง GitHub Release และแนบไฟล์ .exe เมื่อพุช tag ขึ้นต้นด้วย v*
      - name: Create GitHub Release (on tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
